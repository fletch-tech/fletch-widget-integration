{"version":3,"file":"bundle.js","sources":["../src/IframeUtils.js","../src/popupStyles.js","../src/popup.js","../src/mediaQueries.js","../src/index.js"],"sourcesContent":["// iframeUtils.js\nexport const createIframe = (config) => {\n  const iframe = document.createElement(\"iframe\");\n  const queryParamsString = new URLSearchParams(config.queryParams).toString();\n\n  // Set width and height directly in the iframe object\n  iframe.width = config.height;\n  iframe.height = config.width;\n\n  // Apply custom styles or use default styles\n  const defaultStyles = {\n      backgroundColor: \"transparent\",\n    //   position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      border: \"0\",\n      color: \"white\",\n      overflow: \"auto\"\n  };\n\n  const customStyles = config.style || {};\n  const combinedStyles = { ...defaultStyles, ...customStyles };\n  Object.assign(iframe.style, combinedStyles);\n\n  // Set other properties\n  for (const key in config) {\n      if (![\"queryParams\", \"popup\", \"popupWidth\", \"popupHeight\", \"style\"].includes(key)) {\n          iframe[key] = config[key];\n      }\n  }\n\n  iframe.src = `${config.src}/?${queryParamsString}`;\n  return iframe;\n};\n","// popupStyles.js\n(function () {\n  var styles = `\n      .modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.7);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n      }\n\n      .popup-container {\n          background: #fff;\n          padding: 20px;\n          border-radius: 8px;\n          box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n          position: relative;\n          overflow: hidden;\n      }\n\n      .close-button {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          cursor: pointer;\n          font-size: 18px;\n          color: #333;\n      }\n\n\n      body.modal-open {\n          overflow: hidden;\n      }\n  `;\n\n  var styleElement = document.createElement(\"style\");\n  styleElement.type = \"text/css\";\n  styleElement.appendChild(document.createTextNode(styles));\n  document.head.appendChild(styleElement);\n})();\n","// popup.js\nimport { createIframe } from './IframeUtils';\n\nexport const handlePopup = (config) => {\n  if (!config.popup) {\n    console.error(\"Error: Popup is not enabled.\");\n    return;\n  }\n\n  const button = document.querySelector(\"button#openIframeContainer\");\n  const iframeContainer = document.querySelector(\"div#iframeContainer\");\n\n  if (!button && !iframeContainer) {\n    console.error(\"Error: Button or element with id 'iframeContainer' not found.\");\n    return;\n  }\n\n  if (button) {\n    button.addEventListener(\"click\", () => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalOverlay = document.createElement(\"div\");\n      modalOverlay.className = \"modal-overlay\";\n\n      const popupContainer = document.createElement(\"div\");\n      popupContainer.className = \"popup-container\";\n      popupContainer.style.width = config.popupWidth;\n      popupContainer.style.height = config.popupHeight;\n\n      const popupIframe = createIframe(config);\n\n      const closeButton = document.createElement(\"span\");\n      closeButton.className = \"close-button\";\n      closeButton.innerHTML = \"&times;\";\n      closeButton.addEventListener(\"click\", () => {\n        document.body.classList.remove(\"modal-open\");\n        document.body.removeChild(modalOverlay);\n      });\n\n      popupContainer.appendChild(closeButton);\n      popupContainer.appendChild(popupIframe);\n      modalOverlay.appendChild(popupContainer);\n      document.body.appendChild(modalOverlay);\n    });\n  } \n  \n    const iframe = createIframe(config);\n    iframeContainer.appendChild(iframe);\n};\n","// mediaQueries.js\nconst applyMediaQueryConfigurations = (fletchApp) => {\n    const containers = document.querySelectorAll('#iframeContainer');\n\n    const applyConfig = (config) => {\n        containers.forEach(container => {\n            container.style.height = config.height;\n            container.style.width = config.width;\n            container.style.fontSize = config.fontSize;\n            container.style.color = config.color;\n            container.style.backgroundColor=config.backgroundColor;\n        });\n\n        if (config.popup) {\n            console.log(\"Popup enabled for this screen size\");\n            // Add logic to handle popup for this screen size\n        }\n    };\n\n    const handleMediaQueryChange = (event) => {\n        let matched = false;\n\n        fletchApp.mediaQueries.forEach(({ query, config }) => {\n            if (event.matches && window.matchMedia(query).matches) {\n                // Apply configuration for this media query\n                applyConfig(config);\n                matched = true;\n            }\n        });\n\n        // If no media query matches, apply default configuration\n        if (!matched) {\n            console.log(\"No media query matched, applying default configuration\");\n            applyConfig(fletchApp); // Apply default configuration from fletchApp object in HTML\n        }\n    };\n\n    // Remove existing event listeners\n    fletchApp.mediaQueries.forEach(({ query }) => {\n        window.matchMedia(query).removeEventListener('change', handleMediaQueryChange);\n    });\n\n    // Add new event listeners\n    fletchApp.mediaQueries.forEach(({ query }) => {\n        window.matchMedia(query).addEventListener('change', handleMediaQueryChange);\n    });\n\n    // Apply configuration initially\n    handleMediaQueryChange({ matches: window.matchMedia(fletchApp.mediaQueries[0].query).matches });\n};\n\nexport default applyMediaQueryConfigurations;\n","// index.js\nconst { handlePopup } = require('./popup');\nconst {addPopupStyles}=require('./popupStyles');\nconst applyMediaQueryConfigurations = require('./mediaQueries');\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const config = window.fletchApp || {};\n\n    // Define the default values\n    const defaults = {\n        src: \"https://pethub-wsb.fletch.co\",\n        queryParams: {},\n        popup: false,\n        popupWidth: \"60%\",\n        popupHeight: \"60%\", \n    };\n\n    const mergedConfig = { ...defaults, ...config};\n\n    console.log(\"DOMContentLoaded event fired\");\n    // Apply media query configurations\n    applyMediaQueryConfigurations(mergedConfig);\n\n    // Listen for changes in screen size\n    window.addEventListener('resize', () => {\n        // Reapply media query configurations when the window is resized\n        applyMediaQueryConfigurations(fletchApp);\n    });\n\n     // Initialize popup and styles\n     handlePopup(mergedConfig);\n     addPopupStyles();\n\n    \n});\n"],"names":["createIframe","config","iframe","document","createElement","queryParamsString","URLSearchParams","queryParams","toString","width","height","combinedStyles","backgroundColor","top","left","border","color","overflow","style","Object","assign","key","includes","src","styleElement","popup","console","error","button","querySelector","iframeContainer","addEventListener","body","classList","add","modalOverlay","className","popupContainer","popupWidth","popupHeight","popupIframe","closeButton","innerHTML","remove","removeChild","appendChild","type","createTextNode","head","fletchApp","containers","querySelectorAll","applyConfig","forEach","container","fontSize","log","handleMediaQueryChange","event","matched","mediaQueries","query","matches","window","matchMedia","removeEventListener","handlePopup","require$$0","addPopupStyles","applyMediaQueryConfigurations","require$$2","mergedConfig"],"mappings":"8XACO,MAAMA,EAAgBC,IAC3B,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAoB,IAAIC,gBAAgBL,EAAOM,aAAaC,WAGlEN,EAAOO,MAAQR,EAAOS,OACtBR,EAAOQ,OAAST,EAAOQ,MAGvB,MAaME,EAAiB,CAZnBC,gBAAiB,cAEjBC,IAAK,IACLC,KAAM,IACNL,MAAO,OACPC,OAAQ,OACRK,OAAQ,IACRC,MAAO,QACPC,SAAU,UAGOhB,EAAOiB,OAAS,IAErCC,OAAOC,OAAOlB,EAAOgB,MAAOP,GAG5B,IAAK,MAAMU,KAAOpB,EACT,CAAC,cAAe,QAAS,aAAc,cAAe,SAASqB,SAASD,KACzEnB,EAAOmB,GAAOpB,EAAOoB,IAK7B,OADAnB,EAAOqB,IAAM,GAAGtB,EAAOsB,QAAQlB,IACxBH,CAAM,MCKTsB,gDCpCsBvB,IAC1B,IAAKA,EAAOwB,MAEV,YADAC,QAAQC,MAAM,gCAIhB,MAAMC,EAASzB,SAAS0B,cAAc,8BAChCC,EAAkB3B,SAAS0B,cAAc,uBAE/C,IAAKD,IAAWE,EAEd,YADAJ,QAAQC,MAAM,iEAIZC,GACFA,EAAOG,iBAAiB,SAAS,KAC/B5B,SAAS6B,KAAKC,UAAUC,IAAI,cAE5B,MAAMC,EAAehC,SAASC,cAAc,OAC5C+B,EAAaC,UAAY,gBAEzB,MAAMC,EAAiBlC,SAASC,cAAc,OAC9CiC,EAAeD,UAAY,kBAC3BC,EAAenB,MAAMT,MAAQR,EAAOqC,WACpCD,EAAenB,MAAMR,OAAST,EAAOsC,YAErC,MAAMC,EAAcxC,EAAaC,GAE3BwC,EAActC,SAASC,cAAc,QAC3CqC,EAAYL,UAAY,eACxBK,EAAYC,UAAY,UACxBD,EAAYV,iBAAiB,SAAS,KACpC5B,SAAS6B,KAAKC,UAAUU,OAAO,cAC/BxC,SAAS6B,KAAKY,YAAYT,EAAa,IAGzCE,EAAeQ,YAAYJ,GAC3BJ,EAAeQ,YAAYL,GAC3BL,EAAaU,YAAYR,GACzBlC,SAAS6B,KAAKa,YAAYV,EAAa,IAIzC,MAAMjC,EAASF,EAAaC,GAC5B6B,EAAgBe,YAAY3C,EAAO,MDRjCsB,EAAerB,SAASC,cAAc,UAC7B0C,KAAO,WACpBtB,EAAaqB,YAAY1C,SAAS4C,eAvCrB,oxBAwCb5C,SAAS6C,KAAKH,YAAYrB,iDEzCWyB,IACnC,MAAMC,EAAa/C,SAASgD,iBAAiB,oBAEvCC,EAAenD,IACjBiD,EAAWG,SAAQC,IACfA,EAAUpC,MAAMR,OAAST,EAAOS,OAChC4C,EAAUpC,MAAMT,MAAQR,EAAOQ,MAC/B6C,EAAUpC,MAAMqC,SAAWtD,EAAOsD,SAClCD,EAAUpC,MAAMF,MAAQf,EAAOe,MAC/BsC,EAAUpC,MAAMN,gBAAgBX,EAAOW,eAAe,IAGtDX,EAAOwB,OACPC,QAAQ8B,IAAI,qCAEf,EAGCC,EAA0BC,IAC5B,IAAIC,GAAU,EAEdV,EAAUW,aAAaP,SAAQ,EAAGQ,QAAO5D,aACjCyD,EAAMI,SAAWC,OAAOC,WAAWH,GAAOC,UAE1CV,EAAYnD,GACZ0D,GAAU,EACb,IAIAA,IACDjC,QAAQ8B,IAAI,0DACZJ,EAAYH,GACf,EAILA,EAAUW,aAAaP,SAAQ,EAAGQ,YAC9BE,OAAOC,WAAWH,GAAOI,oBAAoB,SAAUR,EAAuB,IAIlFR,EAAUW,aAAaP,SAAQ,EAAGQ,YAC9BE,OAAOC,WAAWH,GAAO9B,iBAAiB,SAAU0B,EAAuB,IAI/EA,EAAuB,CAAEK,QAASC,OAAOC,WAAWf,EAAUW,aAAa,GAAGC,OAAOC,SAAU,KC/CnG,MAAMI,YAAEA,GAAgBC,GAClBC,eAACA,MACDC,EAAgCC,EAItCnE,SAAS4B,iBAAiB,oBAAoB,WAC1C,MAWMwC,EAAe,CAPjBhD,IAAK,+BACLhB,YAAa,CAAE,EACfkB,OAAO,EACPa,WAAY,MACZC,YAAa,SARFwB,OAAOd,WAAa,IAanCvB,QAAQ8B,IAAI,gCAEZa,EAA8BE,GAG9BR,OAAOhC,iBAAiB,UAAU,KAE9BsC,EAA8BpB,UAAU,IAI3CiB,EAAYK,GACZH,GAGL"}